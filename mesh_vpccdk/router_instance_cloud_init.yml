# This YML string is called cloud-config, it conforms to the cloud-init specification:
# https://cloudinit.readthedocs.io/en/latest/topics/examples.html

# These instructions are executed on the first boot of the router instance,
# here we are using them to install and configure bird and wireguard

packages:
 - bird
 - wireguard
 - awscli
 - ipcalc

package_upgrade: true

write_files:
 - content: |
    router id ${P2P_IP_Address_AWS_Side};

    protocol kernel {
            scan time 10;
            persist;
            metric 128;
            export all;
    }

    protocol direct {
            interface "ens5";
    }

    protocol static {
            import all;
    }

    # The Device protocol is not a real routing protocol. It doesn't generate any
    # routes and it only serves as a module for getting information about network
    # interfaces from the kernel.
    protocol device {
            scan time 10;
    }

    protocol ospf {
            import all;
            export all;
            area 0 {
                    networks {
                            ${VPCCIDR};
                    };
                    interface "wgmesh" {
                            cost 15;
                            type ptmp;
                            neighbors {
                                    ${P2P_IP_Address_Mesh_Side};
                            };
                    };
            };
    };
   path: /etc/bird/bird.conf
 - content: |
    network:
      version: 2
      renderer: networkd
      tunnels:
        mode: wireguard
        key: /etc/wireguard/private.key
        addresses: [${P2P_IP_Address_AWS_Side}/31]
        port: 51819
        peers:
          - keys:
              public: ${WireGuardServerPublicKey}
            allowed-ips: [0.0.0.0/0]
            keepalive: 30
            endpoint: ${WireGuardServerPublicIP}:${WireGuardServerPort}
        routes:
        - to: ${WireGuardServerPublicIP}/32
          via: XXXX_VPC_ROUTER_ADDRESS_XXXX
   path: /etc/netplan/70-wireguard-tunnel.yaml


runcmd:
 - "echo \"net.ipv4.ip_forward = 1\" >> /etc/sysctl.conf"
 - "sudo sysctl -p"
 - "sudo wg genkey > /etc/wireguard/private.key"
 - "sudo chmod 644 /etc/wireguard/private.key"
 - "sudo awk -i inplace 'BEGIN{getline l < \"/etc/wireguard/private.key\"}/XXXX_AUTO_REPLACED_AT_INSTANCE_START_XXXX/{gsub(\"XXXX_AUTO_REPLACED_AT_INSTANCE_START_XXXX\",l)}1' /etc/wireguard/wgmesh.conf"
 - "VPC_ROUTER_ADDR=$(ipcalc -b 10.70.178.32/27 | awk '/HostMin/ {print $2}')"
 - "sudo sed -i -e \"s/XXXX_VPC_ROUTER_ADDRESS_XXXX/$VPC_ROUTER_ADDR/\" /etc/netplan/70-wireguard-tunnel.yaml"
 - "sleep 60"
 - "sudo netplan apply"
 - "sudo systemctl restart bird"
 - "sudo cat /etc/wireguard/private.key | wg pubkey > /etc/wireguard/public.key"
 - "sudo aws ssm put-parameter --name /MeshVPC/RouterInstancePublicKey --description 'The public key of the WG server running on the router EC2 instance' --type String --overwrite --region ${AWSRegion} --value $(cat /etc/wireguard/public.key)"